#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'towerBreakers' function below.
#
# The function is expected to return an INTEGER.
# The function accepts following parameters:
#  1. INTEGER n
#  2. INTEGER m
#

from itertools import repeat
 
def towerBreakers(n, m):
    # Write your code here
    # m = height of tower
    # n = number of tower
    lastMoved=0
    dictHeightofTowers= dict(enumerate(repeat(m, n)))
    while sum(dictHeightofTowers.values())>n:
        for key, value in dictHeightofTowers.items():
            if value>=1:
                blockToRemove=[]
                for number in reversed(range(1,int(value))):
                    newHeight=value-number
                    division=value/newHeight
                    if division.is_integer():
                        blockToRemove.append(number)
                        break
                if len(blockToRemove)>0: 
                    dictHeightofTowers[key]=value-blockToRemove[0]
                    blockToRemove.pop()
                    if lastMoved==0:
                        lastMoved=1
                    elif lastMoved==1:
                        lastMoved=2
                    elif lastMoved==2:
                        lastMoved=1

    return lastMoved
                    
        

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    t = int(input().strip())

    for t_itr in range(t):
        first_multiple_input = input().rstrip().split()

        n = int(first_multiple_input[0])

        m = int(first_multiple_input[1])

        result = towerBreakers(n, m)

        fptr.write(str(result) + '\n')

    fptr.close()
