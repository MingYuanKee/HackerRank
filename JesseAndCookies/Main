#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'cookies' function below.
#
# The function is expected to return an INTEGER.
# The function accepts following parameters:
#  1. INTEGER k
#  2. INTEGER_ARRAY A
#
import heapq

def cookies(k, A):
    # Convert A into a min-heap
    heapq.heapify(A)
    counter = 0
    print(A)
    while A[0]<k:
        if len(A)==1:
            counter=-1
            break
        else:
            # heapq do not sort the elements, it only ensures the smallest element is at index 0
            # If you remove the elements one by one, it ensures each step the element at index 0
            # is the smallest
            first = heapq.heappop(A)
            second = heapq.heappop(A)
            
            # Combine the two cookies
            new_cookie = first + 2 * second
            
            heapq.heappush(A, new_cookie)  # Add the new cookie back to the heap
            
            counter += 1

    # Check if the remaining element satisfies the condition
    return counter 


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()

    n = int(first_multiple_input[0])

    k = int(first_multiple_input[1])

    A = list(map(int, input().rstrip().split()))

    result = cookies(k, A)

    fptr.write(str(result) + '\n')

    fptr.close()
